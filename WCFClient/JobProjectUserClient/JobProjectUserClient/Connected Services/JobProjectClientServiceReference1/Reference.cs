//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JobProjectUserClient.JobProjectClientServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ModelLayer")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FName {
            get {
                return this.FNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FNameField, value) != true)) {
                    this.FNameField = value;
                    this.RaisePropertyChanged("FName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobProjectClientServiceReference1.IJobProjectUserService")]
    public interface IJobProjectUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobProjectUserService/Create", ReplyAction="http://tempuri.org/IJobProjectUserService/CreateResponse")]
        void Create(JobProjectUserClient.JobProjectClientServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobProjectUserService/Create", ReplyAction="http://tempuri.org/IJobProjectUserService/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(JobProjectUserClient.JobProjectClientServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobProjectUserService/Delete", ReplyAction="http://tempuri.org/IJobProjectUserService/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobProjectUserService/Delete", ReplyAction="http://tempuri.org/IJobProjectUserService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobProjectUserService/Get", ReplyAction="http://tempuri.org/IJobProjectUserService/GetResponse")]
        JobProjectUserClient.JobProjectClientServiceReference1.User Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobProjectUserService/Get", ReplyAction="http://tempuri.org/IJobProjectUserService/GetResponse")]
        System.Threading.Tasks.Task<JobProjectUserClient.JobProjectClientServiceReference1.User> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobProjectUserService/GetAll", ReplyAction="http://tempuri.org/IJobProjectUserService/GetAllResponse")]
        JobProjectUserClient.JobProjectClientServiceReference1.User[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobProjectUserService/GetAll", ReplyAction="http://tempuri.org/IJobProjectUserService/GetAllResponse")]
        System.Threading.Tasks.Task<JobProjectUserClient.JobProjectClientServiceReference1.User[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobProjectUserService/Update", ReplyAction="http://tempuri.org/IJobProjectUserService/UpdateResponse")]
        void Update(JobProjectUserClient.JobProjectClientServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobProjectUserService/Update", ReplyAction="http://tempuri.org/IJobProjectUserService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(JobProjectUserClient.JobProjectClientServiceReference1.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobProjectUserServiceChannel : JobProjectUserClient.JobProjectClientServiceReference1.IJobProjectUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobProjectUserServiceClient : System.ServiceModel.ClientBase<JobProjectUserClient.JobProjectClientServiceReference1.IJobProjectUserService>, JobProjectUserClient.JobProjectClientServiceReference1.IJobProjectUserService {
        
        public JobProjectUserServiceClient() {
        }
        
        public JobProjectUserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobProjectUserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobProjectUserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobProjectUserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Create(JobProjectUserClient.JobProjectClientServiceReference1.User user) {
            base.Channel.Create(user);
        }
        
        public System.Threading.Tasks.Task CreateAsync(JobProjectUserClient.JobProjectClientServiceReference1.User user) {
            return base.Channel.CreateAsync(user);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public JobProjectUserClient.JobProjectClientServiceReference1.User Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<JobProjectUserClient.JobProjectClientServiceReference1.User> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public JobProjectUserClient.JobProjectClientServiceReference1.User[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<JobProjectUserClient.JobProjectClientServiceReference1.User[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public void Update(JobProjectUserClient.JobProjectClientServiceReference1.User user) {
            base.Channel.Update(user);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(JobProjectUserClient.JobProjectClientServiceReference1.User user) {
            return base.Channel.UpdateAsync(user);
        }
    }
}
